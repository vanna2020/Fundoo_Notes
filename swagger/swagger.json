{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Fundoo Notes App",
        "description": "Fundoo Notes Application",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "description": "Register new user",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "User that we want to register",
                        "schema": {
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "New user is Registered"
                    },
                    "409": {
                        "description": "User already exist"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "description": "Login user",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forgotpassword": {
            "post": {
                "tags": [
                    "forgotPassword"
                ],
                "description": "Send password link",
                "parameters": [
                    {
                        "name": "forgotpassword",
                        "in": "body",
                        "description": "Sent password resent link",
                        "schema": {
                            "$ref": "#/definitions/forgotpassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reset-Password": {
            "put": {
                "tags": [
                    "reset password"
                ],
                "description": "Already registered ? Then reset password successfully !!",
                "parameters": [
                    {
                        "name": "Reset Password",
                        "in": "body",
                        "description": "Reset Password with code",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "reset password succesfully !!"
                    },
                    "400": {
                        "description": "Incorrect Password for reset password"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/createnotes": {
            "post": {
                "tags": [
                    "Create Notes"
                ],
                "description": "Create a  note !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "create note",
                        "in": "body",
                        "description": "Note's body",
                        "schema": {
                            "$ref": "#/definitions/notes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getnotes": {
            "get": {
                "tags": [
                    "Get Notes"
                ],
                "description": "Get a  note !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Get note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/getnotes/{id}": {
            "get": {
                "tags": [
                    "Get Notes"
                ],
                "description": "Get a note by ID for perticuler person id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of note you want to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Create note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/updatenotes/{id}": {
            "put": {
                "tags": [
                    "update Notes"
                ],
                "description": "update a note by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of note you want to update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "Note body",
                        "schema": {
                            "$ref": "#/definitions/updatenotes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "update note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/deletenotes/{id}": {
            "delete": {
                "tags": [
                    "Delete Notes"
                ],
                "description": "Delete a note by ID for perticuler person id !!",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of note you want to update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete note succesfully !!"
                    },
                    "401": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/addlabel/{id}":{
            "post":{
              "tags":["Add label"],
              "description":"Added label",
              "parameters":[
                {
                  "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                }
              },
              {
                "in":"path",
                "name":"id",
                "description":"Note id",
                "schema":{
                  "type":"string",
                  "required":true
                }
              },
              {
                "in":"body",
                "name":"addlabel",
                "description":"Label to be updated",
                  "schema":{"$ref":"#/definitions/addlabel"}
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"label added"},
                "500":{"description":"Failed to add label"},
                "400":{"description":"Invalid Token"}
              }
            }
        },
        "/getlabel":{
            "get":{
              "tags":["get labels"],
              "description":"Gets all labels",
              "parameters":[
                {
                  "in":"header",
                "name":"authorization",
                "description":"Token for validation",
                "schema":{
                  "type":"string",
                  "required":true
                }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"labels retrieved"},
                "400":{"description":"Couldnt retrieve labels"},
                "500":{"description":"Some error Occured"}
              }
            }
        },
        "/getlabel/{id}":{
            "get":{
              "tags":["get label by id"],
              "description":"Gets label by id",
              "parameters":[
                {
                  "in":"header",
                  "name":"authorization",
                  "description":"Token for validation",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                },
                {
                  "in":"path",
                  "name":"id",
                  "description":"Label id",
                  "schema":{
                    "type":"string",
                    "required":true
                  }
                }
              ],
              "produces":["application/json"],
              "responses":{
                "200":{"description":"label Found"},
                "500":{"description":"label not Found"},
                "400":{"description":"Invalid Token"}
              }
            }
        },
        "/updatelabel/{id}": {
            "put": {
                "tags": [
                    "Update Label"
                ],
                "description": "Updates Label",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Label id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "body",
                        "name": "label",
                        "description": "Label to be updated",
                        "schema": {
                            "$ref": "#/definitions/UpdateLabel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "label updated"
                    },
                    "500": {
                        "description": "Failed to update label"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        },
        "/deleteLabel/{id}": {
            "delete": {
                "tags": [
                    "Delete Label"
                ],
                "description": "Delete Label by ID ",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of label you want to delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Delete note succesfully !!"
                    },
                    "400": {
                        "description": "Please enter Valid Token"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "registerUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotpassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "notes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "updatenotes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a title here.....",
                "description": "Write a description here....."
            }
        },
        "addlabel":{
            "type":"object",
            "properties":{
                "labelName":{
                  "type":"string"
                }
              }
        },
        "UpdateLabel": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            }
        },"DeleteLabel": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            }
        }
    }
}